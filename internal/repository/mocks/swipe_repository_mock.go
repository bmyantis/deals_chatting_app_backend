// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/swipe.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	model "deals_chatting_app_backend/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockSwipeRepository is a mock of SwipeRepository interface.
type MockSwipeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSwipeRepositoryMockRecorder
}

// MockSwipeRepositoryMockRecorder is the mock recorder for MockSwipeRepository.
type MockSwipeRepositoryMockRecorder struct {
	mock *MockSwipeRepository
}

// NewMockSwipeRepository creates a new mock instance.
func NewMockSwipeRepository(ctrl *gomock.Controller) *MockSwipeRepository {
	mock := &MockSwipeRepository{ctrl: ctrl}
	mock.recorder = &MockSwipeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSwipeRepository) EXPECT() *MockSwipeRepositoryMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockSwipeRepository) Save(ctx context.Context, userID uuid.UUID, swipe model.Swipe) (*model.Swipe, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, userID, swipe)
	ret0, _ := ret[0].(*model.Swipe)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockSwipeRepositoryMockRecorder) Save(ctx, userID, swipe interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockSwipeRepository)(nil).Save), ctx, userID, swipe)
}
